Component: ARM Compiler 5.06 update 1 (build 61) Tool: armlink [4d35a8]

==============================================================================

Section Cross References

    alloc.o(.text) refers to alloc.o(.data) for .data
    alloc.o(.text) refers to alloc.o(.data) for .data
    alloc.o(.text) refers to alloc.o(.bss) for .bss
    assert.o(.text) refers to printf8.o(i.__0printf$8) for __2printf
    assert.o(.text) refers to assert.o(.constdata) for .constdata
    io.o(.text) refers to uart.o(.text) for UART_GetChar
    io.o(.text) refers to uart.o(.text) for UART_PutChar
    queue.o(.text) refers to queue.o(.text) for queue_isempty
    queue.o(.text) refers to queue.o(.text) for queue_isempty
    queue.o(.text) refers to queue.o(.text) for queue_isempty
    stdlib.o(.text) refers to stdlib.o(.text) for isspace
    stdlib.o(.text) refers to stdlib.o(.text) for isalnum
    stdlib.o(.text) refers to stdlib.o(.text) for isdigit
    stdlib.o(.text) refers to stdlib.o(.text) for isupper
    stdlib.o(.text) refers to stdlib.o(.text) for strlen
    stdlib.o(.text) refers to stdlib.o(.text) for strlen
    start.o(.text) refers to wdog.o(.text) for WDOG_DisableWDOGEnableUpdate
    start.o(.text) refers to rtc_demo.o(.text) for main
    start.o(.text) refers to wdog.o(.text) for WDOG_Disable
    sysinit.o(.text) refers to sim.o(.text) for SIM_GetStatus
    sysinit.o(.text) refers to printf8.o(i.__0printf$8) for __2printf
    sysinit.o(.text) refers to uart.o(.text) for UART_Init
    sysinit.o(.text) refers to memseta.o(.text) for __aeabi_memclr4
    sysinit.o(.text) refers to ics.o(.text) for ICS_Trim
    sysinit.o(.text) refers to sysinit.o(.conststring) for .conststring
    sysinit.o(.text) refers to sysinit.o(.data) for .data
    sysinit.o(.text) refers to printf8.o(i.__0printf$8) for __2printf
    sysinit.o(.text) refers to sysinit.o(.data) for .data
    systick.o(.text) refers to printf8.o(i.__0printf$8) for __2printf
    systick.o(.text) refers to systick.o(.data) for .data
    vectors.o(.ARM.__AT_0x00000000) refers to startup_mke06z4.o(STACK) for __initial_sp
    vectors.o(.ARM.__AT_0x00000000) refers to startup_mke06z4.o(.text) for Reset_Handler
    vectors.o(.ARM.__AT_0x00000000) refers to vectors.o(.text) for default_isr
    vectors.o(.ARM.__AT_0x00000000) refers to rtc.o(.text) for RTC_Isr
    startup_mke06z4.o(RESET) refers to startup_mke06z4.o(STACK) for __initial_sp
    startup_mke06z4.o(RESET) refers to startup_mke06z4.o(.text) for Reset_Handler
    startup_mke06z4.o(.text) refers to start.o(.text) for SystemInit
    startup_mke06z4.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    gpio.o(.text) refers to assert.o(.text) for assert_failed
    uart.o(.text) refers to assert.o(.text) for assert_failed
    uart.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    uart.o(.text) refers to assert.o(.text) for assert_failed
    uart.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    uart.o(.text) refers to assert.o(.text) for assert_failed
    uart.o(.text) refers to assert.o(.text) for assert_failed
    uart.o(.text) refers to uart.o(.text) for UART_GetFlags
    uart.o(.text) refers to uart.o(.data) for .data
    uart.o(.text) refers to uart.o(.data) for .data
    uart.o(.text) refers to uart.o(.data) for .data
    uart.o(.text) refers to uart.o(.data) for .data
    rtc.o(.text) refers to rtc.o(.data) for .data
    rtc.o(.text) refers to rtc.o(.text) for RTC_ClrFlags
    ics.o(.text) refers to ics.o(.text) for OSC_Init
    ics.o(.text) refers to ics.o(.text) for OSC_Disable
    ics.o(.text) refers to ics.o(.text) for OSC_Disable
    ics.o(.text) refers to ics.o(.text) for OSC_Init
    ics.o(.text) refers to ics.o(.text) for OSC_Init
    ics.o(.text) refers to ics.o(.text) for OSC_Disable
    ics.o(.text) refers to ics.o(.text) for OSC_Disable
    acmp.o(.text) refers to acmp.o(.data) for .data
    acmp.o(.text) refers to acmp.o(.data) for .data
    acmp.o(.text) refers to acmp.o(.data) for .data
    adc.o(.text) refers to adc.o(.text) for ADC_SelectClock
    adc.o(.text) refers to adc.o(.text) for ADC_SelectClockDivide
    adc.o(.text) refers to adc.o(.text) for ADC_SetMode
    adc.o(.text) refers to adc.o(.text) for ADC_SetFifoLevel
    adc.o(.text) refers to adc.o(.text) for ADC_SetChannel
    adc.o(.text) refers to adc.o(.text) for ADC_SetChannel
    adc.o(.text) refers to adc.o(.data) for .data
    adc.o(.text) refers to adc.o(.data) for .data
    mscan.o(.text) refers to mscan.o(.text) for CAN_LaunchInitialRequest
    mscan.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy
    mscan.o(.text) refers to mscan.o(.data) for .data
    mscan.o(.text) refers to mscan.o(.data) for .data
    mscan.o(.text) refers to mscan.o(.data) for .data
    mscan.o(.text) refers to mscan.o(.data) for .data
    crc.o(.text) refers to uread4.o(.text) for __aeabi_uread4
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to assert.o(.text) for assert_failed
    ftm.o(.text) refers to ftm.o(.bss) for .bss
    ftm.o(.text) refers to ftm.o(.bss) for .bss
    ftm.o(.text) refers to ftm.o(.bss) for .bss
    ftm.o(.text) refers to ftm.o(.bss) for .bss
    i2c.o(.text) refers to i2c.o(.text) for I2C_SetSlaveAddress
    i2c.o(.text) refers to i2c.o(.text) for I2C_SetSCLLowTimeout
    i2c.o(.text) refers to i2c.o(.text) for NVIC_EnableIRQ
    i2c.o(.text) refers to i2c.o(.text) for NVIC_EnableIRQ
    i2c.o(.text) refers to i2c.o(.text) for I2C_Start
    i2c.o(.text) refers to i2c.o(.text) for I2C_WriteOneByte
    i2c.o(.text) refers to i2c.o(.text) for I2C_Stop
    i2c.o(.text) refers to i2c.o(.text) for I2C_Start
    i2c.o(.text) refers to i2c.o(.text) for I2C_WriteOneByte
    i2c.o(.text) refers to i2c.o(.text) for I2C_ReadOneByte
    i2c.o(.text) refers to i2c.o(.text) for I2C_Stop
    i2c.o(.text) refers to i2c.o(.data) for .data
    i2c.o(.text) refers to i2c.o(.data) for .data
    i2c.o(.text) refers to i2c.o(.data) for .data
    i2c.o(.text) refers to i2c.o(.data) for .data
    kbi.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy4
    kbi.o(.text) refers to assert.o(.text) for assert_failed
    kbi.o(.text) refers to kbi.o(.constdata) for .constdata
    kbi.o(.text) refers to kbi.o(.data) for .data
    kbi.o(.text) refers to kbi.o(.data) for .data
    kbi.o(.text) refers to kbi.o(.data) for .data
    flash.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_Program2LongWords
    flash.o(.text) refers to flash.o(.text) for FLASH_Program1LongWord
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    flash.o(.text) refers to flash.o(.text) for FLASH_LaunchCMD
    pit.o(.text) refers to pit.o(.data) for .data
    pit.o(.text) refers to pit.o(.text) for PIT_ChannelDisableInt
    pit.o(.text) refers to pit.o(.text) for PIT_ChannelDisableChain
    pit.o(.text) refers to pit.o(.text) for PIT_ChannelClrFlags
    pit.o(.text) refers to pit.o(.text) for PIT_ChannelClrFlags
    pit.o(.text) refers to pit.o(.data) for .data
    pit.o(.text) refers to pit.o(.text) for PIT_ChannelClrFlags
    pit.o(.text) refers to pit.o(.data) for .data
    pmc.o(.text) refers to arm_cm0.o(.text) for stop
    pmc.o(.text) refers to arm_cm0.o(.text) for wait
    pwt.o(.text) refers to pwt.o(.data) for .data
    pwt.o(.text) refers to pwt.o(.data) for .data
    spi.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    spi.o(.text) refers to assert.o(.text) for assert_failed
    spi.o(.text) refers to spi.o(.text) for NVIC_EnableIRQ
    spi.o(.text) refers to spi.o(.text) for SPI_SetBaudRate
    spi.o(.text) refers to assert.o(.text) for assert_failed
    spi.o(.text) refers to spi.o(.data) for .data
    spi.o(.text) refers to spi.o(.data) for .data
    spi.o(.text) refers to spi.o(.data) for .data
    rtc_demo.o(.text) refers to sysinit.o(.text) for sysinit
    rtc_demo.o(.text) refers to printf8.o(i.__0printf$8) for __2printf
    rtc_demo.o(.text) refers to rtc.o(.text) for RTC_SetCallback
    rtc_demo.o(.text) refers to uart.o(.text) for UART_GetChar
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to io.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to io.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to io.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to io.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to io.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to io.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to io.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to io.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to io.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to io.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to io.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to io.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to io.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to io.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to io.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to io.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to io.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to io.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to io.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to io.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to io.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to io.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to io.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to io.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to io.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to io.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to io.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to io.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to io.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to io.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to io.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to io.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to io.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to io.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to io.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to io.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to io.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to io.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to io.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to io.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to io.o(.text) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to io.o(.text) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to io.o(.text) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to io.o(.text) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_mke06z4.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_mke06z4.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to rtc_demo.o(.text) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to rtc_demo.o(.text) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing alloc.o(.rev16_text), (4 bytes).
    Removing alloc.o(.revsh_text), (4 bytes).
    Removing alloc.o(.text), (88 bytes).
    Removing alloc.o(.text), (104 bytes).
    Removing alloc.o(.bss), (16 bytes).
    Removing alloc.o(.data), (4 bytes).
    Removing assert.o(.rev16_text), (4 bytes).
    Removing assert.o(.revsh_text), (4 bytes).
    Removing io.o(.rev16_text), (4 bytes).
    Removing io.o(.revsh_text), (4 bytes).
    Removing io.o(.text), (16 bytes).
    Removing io.o(.text), (16 bytes).
    Removing memtest.o(.text), (18 bytes).
    Removing memtest.o(.text), (112 bytes).
    Removing memtest.o(.text), (82 bytes).
    Removing queue.o(.rev16_text), (4 bytes).
    Removing queue.o(.revsh_text), (4 bytes).
    Removing queue.o(.text), (6 bytes).
    Removing queue.o(.text), (14 bytes).
    Removing queue.o(.text), (30 bytes).
    Removing queue.o(.text), (24 bytes).
    Removing queue.o(.text), (4 bytes).
    Removing queue.o(.text), (44 bytes).
    Removing stdlib.o(.rev16_text), (4 bytes).
    Removing stdlib.o(.revsh_text), (4 bytes).
    Removing stdlib.o(.text), (16 bytes).
    Removing stdlib.o(.text), (28 bytes).
    Removing stdlib.o(.text), (14 bytes).
    Removing stdlib.o(.text), (14 bytes).
    Removing stdlib.o(.text), (50 bytes).
    Removing stdlib.o(.text), (64 bytes).
    Removing stdlib.o(.text), (200 bytes).
    Removing stdlib.o(.text), (22 bytes).
    Removing stdlib.o(.text), (40 bytes).
    Removing stdlib.o(.text), (54 bytes).
    Removing stdlib.o(.text), (28 bytes).
    Removing stdlib.o(.text), (42 bytes).
    Removing stdlib.o(.text), (26 bytes).
    Removing stdlib.o(.text), (38 bytes).
    Removing stdlib.o(.text), (48 bytes).
    Removing stdlib.o(.text), (24 bytes).
    Removing arm_cm0.o(.rev16_text), (4 bytes).
    Removing arm_cm0.o(.revsh_text), (4 bytes).
    Removing arm_cm0.o(.text), (20 bytes).
    Removing arm_cm0.o(.text), (20 bytes).
    Removing arm_cm0.o(.text), (12 bytes).
    Removing start.o(.rev16_text), (4 bytes).
    Removing start.o(.revsh_text), (4 bytes).
    Removing start.o(.text), (10 bytes).
    Removing start.o(.text), (2 bytes).
    Removing start.o(.text), (2 bytes).
    Removing sysinit.o(.rev16_text), (4 bytes).
    Removing sysinit.o(.revsh_text), (4 bytes).
    Removing sysinit.o(.text), (192 bytes).
    Removing systick.o(.rev16_text), (4 bytes).
    Removing systick.o(.revsh_text), (4 bytes).
    Removing systick.o(.text), (24 bytes).
    Removing systick.o(.text), (16 bytes).
    Removing systick.o(.text), (148 bytes).
    Removing systick.o(.data), (4 bytes).
    Removing systick.o(.data), (4 bytes).
    Removing systick.o(.data), (4 bytes).
    Removing vectors.o(.rev16_text), (4 bytes).
    Removing vectors.o(.revsh_text), (4 bytes).
    Removing vectors.o(.text), (2 bytes).
    Removing vectors.o(.text), (2 bytes).
    Removing startup_mke06z4.o(HEAP), (0 bytes).
    Removing gpio.o(.rev16_text), (4 bytes).
    Removing gpio.o(.revsh_text), (4 bytes).
    Removing gpio.o(.text), (92 bytes).
    Removing gpio.o(.text), (300 bytes).
    Removing gpio.o(.text), (80 bytes).
    Removing gpio.o(.text), (80 bytes).
    Removing gpio.o(.text), (84 bytes).
    Removing gpio.o(.text), (460 bytes).
    Removing gpio.o(.text), (104 bytes).
    Removing gpio.o(.text), (104 bytes).
    Removing gpio.o(.text), (104 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(.text), (120 bytes).
    Removing uart.o(.text), (168 bytes).
    Removing uart.o(.text), (172 bytes).
    Removing uart.o(.text), (12 bytes).
    Removing uart.o(.text), (18 bytes).
    Removing uart.o(.text), (26 bytes).
    Removing uart.o(.text), (26 bytes).
    Removing uart.o(.text), (10 bytes).
    Removing uart.o(.text), (12 bytes).
    Removing uart.o(.text), (16 bytes).
    Removing uart.o(.text), (16 bytes).
    Removing uart.o(.text), (16 bytes).
    Removing uart.o(.data), (4 bytes).
    Removing wdog.o(.rev16_text), (4 bytes).
    Removing wdog.o(.revsh_text), (4 bytes).
    Removing wdog.o(.text), (52 bytes).
    Removing wdog.o(.text), (32 bytes).
    Removing wdog.o(.text), (120 bytes).
    Removing wdog.o(.text), (40 bytes).
    Removing wdog.o(.text), (28 bytes).
    Removing wdog.o(.text), (48 bytes).
    Removing wdog.o(.text), (48 bytes).
    Removing sim.o(.rev16_text), (4 bytes).
    Removing sim.o(.revsh_text), (4 bytes).
    Removing sim.o(.text), (24 bytes).
    Removing rtc.o(.rev16_text), (4 bytes).
    Removing rtc.o(.revsh_text), (4 bytes).
    Removing rtc.o(.text), (68 bytes).
    Removing ics.o(.rev16_text), (4 bytes).
    Removing ics.o(.revsh_text), (4 bytes).
    Removing ics.o(.text), (52 bytes).
    Removing ics.o(.text), (76 bytes).
    Removing ics.o(.text), (52 bytes).
    Removing ics.o(.text), (72 bytes).
    Removing ics.o(.text), (52 bytes).
    Removing ics.o(.text), (60 bytes).
    Removing ics.o(.text), (64 bytes).
    Removing ics.o(.text), (16 bytes).
    Removing ics.o(.text), (56 bytes).
    Removing ics.o(.text), (56 bytes).
    Removing ics.o(.text), (40 bytes).
    Removing ics.o(.text), (60 bytes).
    Removing ics.o(.text), (16 bytes).
    Removing ics.o(.text), (16 bytes).
    Removing ics.o(.text), (16 bytes).
    Removing ics.o(.text), (32 bytes).
    Removing ics.o(.text), (12 bytes).
    Removing ics.o(.text), (16 bytes).
    Removing acmp.o(.rev16_text), (4 bytes).
    Removing acmp.o(.revsh_text), (4 bytes).
    Removing acmp.o(.text), (6 bytes).
    Removing acmp.o(.text), (80 bytes).
    Removing acmp.o(.text), (76 bytes).
    Removing acmp.o(.text), (24 bytes).
    Removing acmp.o(.text), (16 bytes).
    Removing acmp.o(.text), (16 bytes).
    Removing acmp.o(.data), (8 bytes).
    Removing adc.o(.rev16_text), (4 bytes).
    Removing adc.o(.revsh_text), (4 bytes).
    Removing adc.o(.text), (16 bytes).
    Removing adc.o(.text), (16 bytes).
    Removing adc.o(.text), (16 bytes).
    Removing adc.o(.text), (16 bytes).
    Removing adc.o(.text), (264 bytes).
    Removing adc.o(.text), (16 bytes).
    Removing adc.o(.text), (24 bytes).
    Removing adc.o(.text), (22 bytes).
    Removing adc.o(.text), (12 bytes).
    Removing adc.o(.text), (16 bytes).
    Removing adc.o(.text), (16 bytes).
    Removing adc.o(.data), (4 bytes).
    Removing mscan.o(.rev16_text), (4 bytes).
    Removing mscan.o(.revsh_text), (4 bytes).
    Removing mscan.o(.text), (548 bytes).
    Removing mscan.o(.text), (20 bytes).
    Removing mscan.o(.text), (48 bytes).
    Removing mscan.o(.text), (56 bytes).
    Removing mscan.o(.text), (20 bytes).
    Removing mscan.o(.text), (48 bytes).
    Removing mscan.o(.text), (152 bytes).
    Removing mscan.o(.text), (12 bytes).
    Removing mscan.o(.text), (12 bytes).
    Removing mscan.o(.text), (16 bytes).
    Removing mscan.o(.text), (16 bytes).
    Removing mscan.o(.data), (8 bytes).
    Removing crc.o(.rev16_text), (4 bytes).
    Removing crc.o(.revsh_text), (4 bytes).
    Removing crc.o(.text), (72 bytes).
    Removing crc.o(.text), (72 bytes).
    Removing crc.o(.text), (104 bytes).
    Removing crc.o(.text), (52 bytes).
    Removing ftm.o(.rev16_text), (4 bytes).
    Removing ftm.o(.revsh_text), (4 bytes).
    Removing ftm.o(.text), (24 bytes).
    Removing ftm.o(.text), (264 bytes).
    Removing ftm.o(.text), (204 bytes).
    Removing ftm.o(.text), (200 bytes).
    Removing ftm.o(.text), (160 bytes).
    Removing ftm.o(.text), (80 bytes).
    Removing ftm.o(.text), (108 bytes).
    Removing ftm.o(.text), (96 bytes).
    Removing ftm.o(.text), (84 bytes).
    Removing ftm.o(.text), (124 bytes).
    Removing ftm.o(.text), (140 bytes).
    Removing ftm.o(.text), (180 bytes).
    Removing ftm.o(.text), (96 bytes).
    Removing ftm.o(.text), (88 bytes).
    Removing ftm.o(.text), (88 bytes).
    Removing ftm.o(.text), (144 bytes).
    Removing ftm.o(.text), (212 bytes).
    Removing ftm.o(.text), (196 bytes).
    Removing ftm.o(.text), (180 bytes).
    Removing ftm.o(.text), (132 bytes).
    Removing ftm.o(.text), (76 bytes).
    Removing ftm.o(.text), (72 bytes).
    Removing ftm.o(.text), (24 bytes).
    Removing ftm.o(.text), (16 bytes).
    Removing ftm.o(.text), (16 bytes).
    Removing ftm.o(.text), (16 bytes).
    Removing ftm.o(.bss), (12 bytes).
    Removing i2c.o(.rev16_text), (4 bytes).
    Removing i2c.o(.revsh_text), (4 bytes).
    Removing i2c.o(.text), (8 bytes).
    Removing i2c.o(.text), (22 bytes).
    Removing i2c.o(.text), (200 bytes).
    Removing i2c.o(.text), (52 bytes).
    Removing i2c.o(.text), (48 bytes).
    Removing i2c.o(.text), (56 bytes).
    Removing i2c.o(.text), (44 bytes).
    Removing i2c.o(.text), (44 bytes).
    Removing i2c.o(.text), (44 bytes).
    Removing i2c.o(.text), (96 bytes).
    Removing i2c.o(.text), (108 bytes).
    Removing i2c.o(.text), (58 bytes).
    Removing i2c.o(.text), (84 bytes).
    Removing i2c.o(.text), (12 bytes).
    Removing i2c.o(.text), (12 bytes).
    Removing i2c.o(.text), (16 bytes).
    Removing i2c.o(.text), (16 bytes).
    Removing i2c.o(.text), (20 bytes).
    Removing i2c.o(.data), (8 bytes).
    Removing kbi.o(.rev16_text), (4 bytes).
    Removing kbi.o(.revsh_text), (4 bytes).
    Removing kbi.o(.text), (340 bytes).
    Removing kbi.o(.text), (24 bytes).
    Removing kbi.o(.text), (60 bytes).
    Removing kbi.o(.text), (32 bytes).
    Removing kbi.o(.text), (32 bytes).
    Removing kbi.o(.constdata), (256 bytes).
    Removing kbi.o(.data), (8 bytes).
    Removing flash.o(.rev16_text), (4 bytes).
    Removing flash.o(.revsh_text), (4 bytes).
    Removing flash.o(.text), (108 bytes).
    Removing flash.o(.text), (40 bytes).
    Removing flash.o(.text), (128 bytes).
    Removing flash.o(.text), (148 bytes).
    Removing flash.o(.text), (128 bytes).
    Removing flash.o(.text), (104 bytes).
    Removing flash.o(.text), (80 bytes).
    Removing flash.o(.text), (104 bytes).
    Removing flash.o(.text), (92 bytes).
    Removing flash.o(.text), (104 bytes).
    Removing flash.o(.text), (64 bytes).
    Removing flash.o(.text), (80 bytes).
    Removing flash.o(.text), (128 bytes).
    Removing flash.o(.text), (132 bytes).
    Removing flash.o(.text), (52 bytes).
    Removing flash.o(.text), (96 bytes).
    Removing flash.o(.text), (116 bytes).
    Removing flash.o(.text), (60 bytes).
    Removing pit.o(.rev16_text), (4 bytes).
    Removing pit.o(.revsh_text), (4 bytes).
    Removing pit.o(.text), (16 bytes).
    Removing pit.o(.text), (136 bytes).
    Removing pit.o(.text), (12 bytes).
    Removing pit.o(.text), (124 bytes).
    Removing pit.o(.text), (24 bytes).
    Removing pit.o(.text), (24 bytes).
    Removing pit.o(.text), (20 bytes).
    Removing pit.o(.text), (20 bytes).
    Removing pit.o(.text), (20 bytes).
    Removing pit.o(.data), (8 bytes).
    Removing pmc.o(.rev16_text), (4 bytes).
    Removing pmc.o(.revsh_text), (4 bytes).
    Removing pmc.o(.text), (10 bytes).
    Removing pmc.o(.text), (10 bytes).
    Removing pmc.o(.text), (48 bytes).
    Removing pwt.o(.rev16_text), (4 bytes).
    Removing pwt.o(.revsh_text), (4 bytes).
    Removing pwt.o(.text), (148 bytes).
    Removing pwt.o(.text), (12 bytes).
    Removing pwt.o(.text), (108 bytes).
    Removing pwt.o(.text), (16 bytes).
    Removing pwt.o(.data), (4 bytes).
    Removing spi.o(.rev16_text), (4 bytes).
    Removing spi.o(.revsh_text), (4 bytes).
    Removing spi.o(.text), (74 bytes).
    Removing spi.o(.text), (336 bytes).
    Removing spi.o(.text), (46 bytes).
    Removing spi.o(.text), (24 bytes).
    Removing spi.o(.text), (76 bytes).
    Removing spi.o(.text), (16 bytes).
    Removing spi.o(.text), (16 bytes).
    Removing spi.o(.text), (20 bytes).
    Removing spi.o(.data), (8 bytes).
    Removing rtc_demo.o(.rev16_text), (4 bytes).
    Removing rtc_demo.o(.revsh_text), (4 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

294 unused section(s) (total 16164 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    .ARM.__AT_0x00000000                     0x00000000   Section      192  vectors.o(.ARM.__AT_0x00000000)
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/unhosted.c              0x00000000   Number         0  uread4.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\..\..\src\common\alloc.c           0x00000000   Number         0  alloc.o ABSOLUTE
    ..\..\..\..\src\common\assert.c          0x00000000   Number         0  assert.o ABSOLUTE
    ..\..\..\..\src\common\io.c              0x00000000   Number         0  io.o ABSOLUTE
    ..\..\..\..\src\common\memtest.c         0x00000000   Number         0  memtest.o ABSOLUTE
    ..\..\..\..\src\common\queue.c           0x00000000   Number         0  queue.o ABSOLUTE
    ..\..\..\..\src\common\stdlib.c          0x00000000   Number         0  stdlib.o ABSOLUTE
    ..\..\..\..\src\cpu\arm_cm0.c            0x00000000   Number         0  arm_cm0.o ABSOLUTE
    ..\..\..\..\src\cpu\start.c              0x00000000   Number         0  start.o ABSOLUTE
    ..\..\..\..\src\cpu\startup_MKE06Z4.s    0x00000000   Number         0  startup_mke06z4.o ABSOLUTE
    ..\..\..\..\src\cpu\sysinit.c            0x00000000   Number         0  sysinit.o ABSOLUTE
    ..\..\..\..\src\cpu\systick.c            0x00000000   Number         0  systick.o ABSOLUTE
    ..\..\..\..\src\cpu\vectors.c            0x00000000   Number         0  vectors.o ABSOLUTE
    ..\..\..\..\src\drivers\PMC\pmc.c        0x00000000   Number         0  pmc.o ABSOLUTE
    ..\..\..\..\src\drivers\acmp\acmp.c      0x00000000   Number         0  acmp.o ABSOLUTE
    ..\..\..\..\src\drivers\adc\adc.c        0x00000000   Number         0  adc.o ABSOLUTE
    ..\..\..\..\src\drivers\can\mscan.c      0x00000000   Number         0  mscan.o ABSOLUTE
    ..\..\..\..\src\drivers\crc\crc.c        0x00000000   Number         0  crc.o ABSOLUTE
    ..\..\..\..\src\drivers\ftm\ftm.c        0x00000000   Number         0  ftm.o ABSOLUTE
    ..\..\..\..\src\drivers\gpio\gpio.c      0x00000000   Number         0  gpio.o ABSOLUTE
    ..\..\..\..\src\drivers\ics\ics.c        0x00000000   Number         0  ics.o ABSOLUTE
    ..\..\..\..\src\drivers\iic\i2c.c        0x00000000   Number         0  i2c.o ABSOLUTE
    ..\..\..\..\src\drivers\kbi\kbi.c        0x00000000   Number         0  kbi.o ABSOLUTE
    ..\..\..\..\src\drivers\nvm\flash.c      0x00000000   Number         0  flash.o ABSOLUTE
    ..\..\..\..\src\drivers\pit\pit.c        0x00000000   Number         0  pit.o ABSOLUTE
    ..\..\..\..\src\drivers\pwt\pwt.c        0x00000000   Number         0  pwt.o ABSOLUTE
    ..\..\..\..\src\drivers\rtc\rtc.c        0x00000000   Number         0  rtc.o ABSOLUTE
    ..\..\..\..\src\drivers\sim\sim.c        0x00000000   Number         0  sim.o ABSOLUTE
    ..\..\..\..\src\drivers\spi\spi.c        0x00000000   Number         0  spi.o ABSOLUTE
    ..\..\..\..\src\drivers\uart\uart.c      0x00000000   Number         0  uart.o ABSOLUTE
    ..\..\..\..\src\drivers\wdog\wdog.c      0x00000000   Number         0  wdog.o ABSOLUTE
    ..\..\..\..\src\projects\KE06\RTC_demo\RTC_demo.c 0x00000000   Number         0  rtc_demo.o ABSOLUTE
    ..\\..\\..\\..\\src\\common\\alloc.c     0x00000000   Number         0  alloc.o ABSOLUTE
    ..\\..\\..\\..\\src\\common\\assert.c    0x00000000   Number         0  assert.o ABSOLUTE
    ..\\..\\..\\..\\src\\common\\io.c        0x00000000   Number         0  io.o ABSOLUTE
    ..\\..\\..\\..\\src\\common\\queue.c     0x00000000   Number         0  queue.o ABSOLUTE
    ..\\..\\..\\..\\src\\common\\stdlib.c    0x00000000   Number         0  stdlib.o ABSOLUTE
    ..\\..\\..\\..\\src\\cpu\\arm_cm0.c      0x00000000   Number         0  arm_cm0.o ABSOLUTE
    ..\\..\\..\\..\\src\\cpu\\start.c        0x00000000   Number         0  start.o ABSOLUTE
    ..\\..\\..\\..\\src\\cpu\\sysinit.c      0x00000000   Number         0  sysinit.o ABSOLUTE
    ..\\..\\..\\..\\src\\cpu\\systick.c      0x00000000   Number         0  systick.o ABSOLUTE
    ..\\..\\..\\..\\src\\cpu\\vectors.c      0x00000000   Number         0  vectors.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\PMC\\pmc.c 0x00000000   Number         0  pmc.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\acmp\\acmp.c 0x00000000   Number         0  acmp.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\adc\\adc.c 0x00000000   Number         0  adc.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\can\\mscan.c 0x00000000   Number         0  mscan.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\crc\\crc.c 0x00000000   Number         0  crc.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\ftm\\ftm.c 0x00000000   Number         0  ftm.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\gpio\\gpio.c 0x00000000   Number         0  gpio.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\ics\\ics.c 0x00000000   Number         0  ics.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\iic\\i2c.c 0x00000000   Number         0  i2c.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\kbi\\kbi.c 0x00000000   Number         0  kbi.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\nvm\\flash.c 0x00000000   Number         0  flash.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\pit\\pit.c 0x00000000   Number         0  pit.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\pwt\\pwt.c 0x00000000   Number         0  pwt.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\rtc\\rtc.c 0x00000000   Number         0  rtc.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\sim\\sim.c 0x00000000   Number         0  sim.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\spi\\spi.c 0x00000000   Number         0  spi.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\uart\\uart.c 0x00000000   Number         0  uart.o ABSOLUTE
    ..\\..\\..\\..\\src\\drivers\\wdog\\wdog.c 0x00000000   Number         0  wdog.o ABSOLUTE
    ..\\..\\..\\..\\src\\projects\\KE06\\RTC_demo\\RTC_demo.c 0x00000000   Number         0  rtc_demo.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    RESET                                    0x000000c0   Section      192  startup_mke06z4.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000180   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000180   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000184   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000188   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000188   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000188   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x00000190   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000190   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000190   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x00000190   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x00000194   Section        0  assert.o(.text)
    .text                                    0x000001b8   Section        0  io.o(.text)
    .text                                    0x000001d4   Section        0  start.o(.text)
    .text                                    0x000001dc   Section        0  vectors.o(.text)
    .text                                    0x000001e0   Section       36  startup_mke06z4.o(.text)
    .text                                    0x00000204   Section        0  uart.o(.text)
    .text                                    0x000002e4   Section        0  wdog.o(.text)
    .text                                    0x00000314   Section        0  sim.o(.text)
    .text                                    0x000003b0   Section        0  uidiv.o(.text)
    .text                                    0x000003dc   Section        0  memseta.o(.text)
    .ARM.__at_0x400                          0x00000400   Section       16  startup_mke06z4.o(.ARM.__at_0x400)
    .text                                    0x00000410   Section        0  sysinit.o(.text)
    .text                                    0x0000066c   Section        0  rtc.o(.text)
    RTC_ClrFlags                             0x000006e5   Thumb Code    12  rtc.o(.text)
    .text                                    0x00000704   Section        0  ics.o(.text)
    .text                                    0x000008a8   Section        0  rtc_demo.o(.text)
    .text                                    0x00000974   Section        0  uldiv.o(.text)
    .text                                    0x000009d4   Section       36  init.o(.text)
    .text                                    0x000009f8   Section        0  llshl.o(.text)
    .text                                    0x00000a18   Section        0  llushr.o(.text)
    i.__0printf$8                            0x00000a3c   Section        0  printf8.o(i.__0printf$8)
    i.__scatterload_copy                     0x00000a5c   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000a6a   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000a6c   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00000a7c   Section        0  printf8.o(i._printf_core)
    _printf_core                             0x00000a7d   Thumb Code  1020  printf8.o(i._printf_core)
    i._printf_post_padding                   0x00000ea4   Section        0  printf8.o(i._printf_post_padding)
    _printf_post_padding                     0x00000ea5   Thumb Code    32  printf8.o(i._printf_post_padding)
    i._printf_pre_padding                    0x00000ec4   Section        0  printf8.o(i._printf_pre_padding)
    _printf_pre_padding                      0x00000ec5   Thumb Code    44  printf8.o(i._printf_pre_padding)
    .constdata                               0x00000ef0   Section       35  assert.o(.constdata)
    .conststring                             0x00000f14   Section       79  sysinit.o(.conststring)
    .data                                    0x1ffff000   Section        4  sysinit.o(.data)
    .data                                    0x1ffff004   Section        4  rtc.o(.data)
    .data                                    0x1ffff008   Section        4  stdout.o(.data)
    STACK                                    0x1ffff010   Section      512  startup_mke06z4.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  rtc_demo.o ABSOLUTE
    __vector_table                           0x00000000   Data         192  vectors.o(.ARM.__AT_0x00000000)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    HEAP$$Base                                - Undefined Reference
    HEAP$$Limit                               - Undefined Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors                                0x000000c0   Data           4  startup_mke06z4.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mke06z4.o ABSOLUTE
    __Vectors_End                            0x00000180   Data           0  startup_mke06z4.o(RESET)
    __main                                   0x00000181   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000181   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000185   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000189   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000189   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000189   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000189   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000191   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000191   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    assert_failed                            0x00000195   Thumb Code    26  assert.o(.text)
    out_char                                 0x000001b9   Thumb Code    12  io.o(.text)
    fputc                                    0x000001c5   Thumb Code    12  io.o(.text)
    SystemInit                               0x000001d5   Thumb Code     8  start.o(.text)
    default_isr                              0x000001dd   Thumb Code     2  vectors.o(.text)
    Reset_Handler                            0x000001e1   Thumb Code     8  startup_mke06z4.o(.text)
    NMI_Handler                              0x000001e9   Thumb Code     2  startup_mke06z4.o(.text)
    HardFault_Handler                        0x000001eb   Thumb Code     2  startup_mke06z4.o(.text)
    MemManage_Handler                        0x000001ed   Thumb Code     2  startup_mke06z4.o(.text)
    BusFault_Handler                         0x000001ef   Thumb Code     2  startup_mke06z4.o(.text)
    UsageFault_Handler                       0x000001f1   Thumb Code     2  startup_mke06z4.o(.text)
    SVC_Handler                              0x000001f3   Thumb Code     2  startup_mke06z4.o(.text)
    DebugMon_Handler                         0x000001f5   Thumb Code     2  startup_mke06z4.o(.text)
    PendSV_Handler                           0x000001f7   Thumb Code     2  startup_mke06z4.o(.text)
    SysTick_Handler                          0x000001f9   Thumb Code     2  startup_mke06z4.o(.text)
    ACMP0_IRQHandler                         0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    ACMP1_IRQHandler                         0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    ADC0_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    DefaultISR                               0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    FTM0_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    FTM1_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    FTM2_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    FTMRE_IRQHandler                         0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    I2C0_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    I2C1_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    ICS_IRQHandler                           0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    IRQ_IRQHandler                           0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    KBI0_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    KBI1_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    LVD_LVW_IRQHandler                       0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    MSCAN_RX_IRQHandler                      0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    MSCAN_TX_IRQHandler                      0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    PIT_CH0_IRQHandler                       0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    PIT_CH1_IRQHandler                       0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    PWT_IRQHandler                           0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    RTC_IRQHandler                           0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    Reserved16_IRQHandler                    0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    Reserved17_IRQHandler                    0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    Reserved18_IRQHandler                    0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    Reserved19_IRQHandler                    0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    Reserved20_IRQHandler                    0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    Reserved42_IRQHandler                    0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    SPI0_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    SPI1_IRQHandler                          0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    UART0_IRQHandler                         0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    UART1_IRQHandler                         0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    UART2_IRQHandler                         0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    Watchdog_IRQHandler                      0x000001fb   Thumb Code     0  startup_mke06z4.o(.text)
    UART_Init                                0x00000205   Thumb Code   120  uart.o(.text)
    UART_GetChar                             0x0000027d   Thumb Code    40  uart.o(.text)
    UART_PutChar                             0x000002a5   Thumb Code    10  uart.o(.text)
    WDOG_Disable                             0x000002e5   Thumb Code    34  wdog.o(.text)
    SIM_Init                                 0x00000315   Thumb Code   116  sim.o(.text)
    SIM_GetStatus                            0x00000389   Thumb Code     8  sim.o(.text)
    SIM_ReadID                               0x00000391   Thumb Code    24  sim.o(.text)
    __aeabi_uidiv                            0x000003b1   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x000003b1   Thumb Code    44  uidiv.o(.text)
    __aeabi_memset                           0x000003dd   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000003dd   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000003dd   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000003eb   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000003eb   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000003eb   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000003ef   Thumb Code    18  memseta.o(.text)
    print_sys_log                            0x00000411   Thumb Code   188  sysinit.o(.text)
    UART_InitPrint                           0x000004cd   Thumb Code    22  sysinit.o(.text)
    sysinit                                  0x000004e3   Thumb Code   106  sysinit.o(.text)
    RTC_Init                                 0x0000066d   Thumb Code    96  rtc.o(.text)
    RTC_SetCallback                          0x000006cd   Thumb Code     6  rtc.o(.text)
    RTC_Isr                                  0x000006d3   Thumb Code    18  rtc.o(.text)
    ICS_SetClkDivider                        0x00000705   Thumb Code    74  ics.o(.text)
    OSC_Init                                 0x0000074f   Thumb Code    60  ics.o(.text)
    FEI_to_FEE                               0x0000078b   Thumb Code    56  ics.o(.text)
    FEI_to_FBE_OSC                           0x000007c3   Thumb Code    78  ics.o(.text)
    FEI_to_FEE_OSC                           0x00000811   Thumb Code    56  ics.o(.text)
    ICS_Trim                                 0x00000849   Thumb Code    26  ics.o(.text)
    ICS_Init                                 0x00000863   Thumb Code    54  ics.o(.text)
    RTC_Task                                 0x000008a9   Thumb Code    10  rtc_demo.o(.text)
    main                                     0x000008b3   Thumb Code   102  rtc_demo.o(.text)
    __aeabi_uldivmod                         0x00000975   Thumb Code    96  uldiv.o(.text)
    __scatterload                            0x000009d5   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x000009d5   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x000009f9   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x000009f9   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00000a19   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x00000a19   Thumb Code     0  llushr.o(.text)
    __0printf$8                              0x00000a3d   Thumb Code    24  printf8.o(i.__0printf$8)
    __1printf$8                              0x00000a3d   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x00000a3d   Thumb Code     0  printf8.o(i.__0printf$8)
    __scatterload_copy                       0x00000a5d   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000a6b   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000a6d   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    ASSERT_FAILED_STR                        0x00000ef0   Data          35  assert.o(.constdata)
    Region$$Table$$Base                      0x00000f64   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00000f84   Number         0  anon$$obj.o(Region$$Table)
    global_pass_count                        0x1ffff000   Data           2  sysinit.o(.data)
    global_fail_count                        0x1ffff002   Data           2  sysinit.o(.data)
    RTC_Callback                             0x1ffff004   Data           4  rtc.o(.data)
    __stdout                                 0x1ffff008   Data           4  stdout.o(.data)
    __initial_sp                             0x1ffff210   Data           0  startup_mke06z4.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000181

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00000f90, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00000f84, Max: 0x00020000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000000c0   Data   RO          487    .ARM.__AT_0x00000000  vectors.o
    0x000000c0   0x000000c0   Data   RO          526    RESET               startup_mke06z4.o
    0x00000180   0x00000000   Code   RO         1940  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x00000180   0x00000004   Code   RO         2214    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x00000184   0x00000004   Code   RO         2217    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x00000188   0x00000000   Code   RO         2219    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x00000188   0x00000000   Code   RO         2221    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x00000188   0x00000008   Code   RO         2222    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x00000190   0x00000000   Code   RO         2224    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x00000190   0x00000000   Code   RO         2226    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x00000190   0x00000004   Code   RO         2215    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x00000194   0x00000024   Code   RO           79    .text               assert.o
    0x000001b8   0x0000001c   Code   RO          103    .text               io.o
    0x000001d4   0x00000008   Code   RO          369    .text               start.o
    0x000001dc   0x00000002   Code   RO          484    .text               vectors.o
    0x000001de   0x00000002   PAD
    0x000001e0   0x00000024   Code   RO          528    .text               startup_mke06z4.o
    0x00000204   0x000000e0   Code   RO          607    .text               uart.o
    0x000002e4   0x00000030   Code   RO          705    .text               wdog.o
    0x00000314   0x0000009c   Code   RO          767    .text               sim.o
    0x000003b0   0x0000002c   Code   RO         1943    .text               mc_p.l(uidiv.o)
    0x000003dc   0x00000024   Code   RO         1947    .text               mc_p.l(memseta.o)
    0x00000400   0x00000010   Code   RO          527    .ARM.__at_0x400     startup_mke06z4.o
    0x00000410   0x0000025c   Code   RO          407    .text               sysinit.o
    0x0000066c   0x00000098   Code   RO          793    .text               rtc.o
    0x00000704   0x000001a4   Code   RO          828    .text               ics.o
    0x000008a8   0x000000cc   Code   RO         1919    .text               rtc_demo.o
    0x00000974   0x00000060   Code   RO         2229    .text               mc_p.l(uldiv.o)
    0x000009d4   0x00000024   Code   RO         2242    .text               mc_p.l(init.o)
    0x000009f8   0x00000020   Code   RO         2244    .text               mc_p.l(llshl.o)
    0x00000a18   0x00000022   Code   RO         2246    .text               mc_p.l(llushr.o)
    0x00000a3a   0x00000002   PAD
    0x00000a3c   0x00000020   Code   RO         2158    i.__0printf$8       mc_p.l(printf8.o)
    0x00000a5c   0x0000000e   Code   RO         2256    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00000a6a   0x00000002   Code   RO         2257    i.__scatterload_null  mc_p.l(handlers.o)
    0x00000a6c   0x0000000e   Code   RO         2258    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00000a7a   0x00000002   PAD
    0x00000a7c   0x00000428   Code   RO         2165    i._printf_core      mc_p.l(printf8.o)
    0x00000ea4   0x00000020   Code   RO         2166    i._printf_post_padding  mc_p.l(printf8.o)
    0x00000ec4   0x0000002c   Code   RO         2167    i._printf_pre_padding  mc_p.l(printf8.o)
    0x00000ef0   0x00000023   Data   RO           80    .constdata          assert.o
    0x00000f13   0x00000001   PAD
    0x00000f14   0x0000004f   Data   RO          409    .conststring        sysinit.o
    0x00000f63   0x00000001   PAD
    0x00000f64   0x00000020   Data   RO         2254    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x1ffff000, Size: 0x00000210, Max: 0x00004000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff000   0x00000004   Data   RW          410    .data               sysinit.o
    0x1ffff004   0x00000004   Data   RW          795    .data               rtc.o
    0x1ffff008   0x00000004   Data   RW         2228    .data               mc_p.l(stdout.o)
    0x1ffff00c   0x00000004   PAD
    0x1ffff010   0x00000200   Zero   RW          524    STACK               startup_mke06z4.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0      83532   alloc.o
        36         10         35          0          0       1192   assert.o
       420         16          0          0          0       3616   ics.o
        28          4          0          0          0       6339   io.o
       152         20          0          4          0       9818   rtc.o
       204         92          0          0          0       2464   rtc_demo.o
       156          8          0          0          0       1588   sim.o
         8          0          0          0          0        465   start.o
        52         24        192          0        512       1080   startup_mke06z4.o
       604        288         79          4          0       5587   sysinit.o
       224         54          0          0          0       3982   uart.o
         2          0        192          0          0       1243   vectors.o
        48         14          0          0          0        575   wdog.o

    ----------------------------------------------------------------------
      1936        530        532          8        512     121481   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         2          0          2          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0        100   memseta.o
      1172         52          0          0          0        324   printf8.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         72   uidiv.o
        96          0          0          0          0         84   uldiv.o

    ----------------------------------------------------------------------
      1504         68          0          4          4        784   Library Totals
         4          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1500         68          0          4          0        784   mc_p.l

    ----------------------------------------------------------------------
      1504         68          0          4          4        784   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      3440        598        532         12        516     121537   Grand Totals
      3440        598        532         12        516     121537   ELF Image Totals
      3440        598        532         12          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 3972 (   3.88kB)
    Total RW  Size (RW Data + ZI Data)               528 (   0.52kB)
    Total ROM Size (Code + RO Data + RW Data)       3984 (   3.89kB)

==============================================================================

